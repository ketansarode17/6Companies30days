https://leetcode.com/problems/number-of-boomerangs/description/

class Solution {
public:
    int numberOfBoomerangs(vector<vector<int>>& points) {
        if(points.size()<3)return 0;
        int cnt=0;
        for(int i=0;i<points.size();i++)
        {
            unordered_map<int,int>mp;
            for(int j=0;j<points.size();j++)
            {
                int dist = ((points[i][0]-points[j][0])*(points[i][0]-points[j][0])) + ((points[i][1]-points[j][1])*(points[i][1]-points[j][1]));
                mp[dist]++;
            }
            for(auto it:mp)
        {
            //if there are n points with same distance we have to consider 2 of them so it can be found
            //using nP2 - n*(n-1);
            cnt+=(it.second*(it.second-1));
        }
        }
        return cnt;
    }
};
