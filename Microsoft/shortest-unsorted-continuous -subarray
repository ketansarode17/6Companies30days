https://leetcode.com/problems/shortest-unsorted-continuous-subarray/description/

class Solution {
public:
    int findUnsortedSubarray(vector<int>& nums) {
        int n=nums.size();
        vector<int>prefix(n),suffix(n);
        prefix[n-1]=nums[n-1];suffix[0]=nums[0];
        for(int i=1;i<n;i++)
        {
            suffix[i]=max(suffix[i-1],nums[i]);
        }
        for(int i=n-2;i>=0;i--)prefix[i]=min(prefix[i+1],nums[i]);
        int x1=-1,x2=-1;
        //for(int i=0;i<n;i++)cout<<prefix[i]<<" "<<suffix[i]<<endl;
        for(int i=0;i<n;i++)
        {
            if(x1==-1)
            {
                if(prefix[i]!=suffix[i])x1=i;
            }
            if(prefix[i]!=suffix[i])x2=i;
        }
        if(x1==-1)return 0;
        return x2-x1+1;
    }
};
